Nice job!  I really liked what I saw... sure would like to have a few more blankers, though (specifically universe and power scroll ;-).  Say, how difficult would it be to support the old blanker style as well as the new???  Well it don't matter all that much since you're probably gunna get all the old blankers revised anyhow, eh?  :-)

T2 Comments:

¥ The command-help dialog doesn't have your AOL address as AFC DYA Jim... :-)
¥ The control panel's list control has a focus frame on it when it's the only targetable control
¥ How are you implementing the non-watch cursor blanking???  I'm gunna start work on Cool Cursor 1.1 soon and it'll be able to tell you (SendRequest to EGO Systems~Cool Cursor~ and ask for the WaitStatus, I believe it'll be... plus you can request to load and animate a special Twilight cursor if ya want... :-)
¥ New Module Idea:  Man, it'd be way cool if the Fill Maze (in demo mode where the computer finds its way out) could be converted into a blanker...
¥ I like the seconds before blank now idea... but more appropriate would probably be some way for the screen to blank until a key is pressed or the mouse button is clicked (i.e. ignore mouse movements)
¥ I think that Phantasm has some kind of way to "slideshow" all its available blankers - ya might want to think about something like that - I dunno how useful it'd be, though
¥ Speaking of Phantasm... sure would be way cool if T2 could use Phantasm blanker modules... but that would be one of the last things I would work on
¥ re: KillT2 message - wouldn't it just be easier for T2 to call KillControls to kill the controls?  It'd have to re-make the pop-up, update button, and divider controls... but that'd be a heckuva lot easier than a loop to kill setup controls - especially if they're created with a single NewControl2 call which refers to a control list, eh?  I don't remember if KillControls actually hides 'em first, so you'd probably have to call invalRect or something on the setup control area.
¥ re: BlankT2 message - instead of a pointer to the movement flag (which tells the module to return to T2) I think the T2Data1 parameter should be a pointer to a structure - first the movement flag, then a grafPortPtr.  This would work in conjunction with a new flag bit (0=setup,1=fade in,2=fade out,3=grafPort) which would let T2 automatically call GetPort/OpenPort/SetPort before dispatching to the module (since I would hope that grafPorts would be used a lot and having each module do this is a waste of code, eh?) and then the ClosePort/SetPort calls would be made by T2 when the blanker module returns.  Also, a way of specifying whether the mode should be either 320 or 640 mode would be appropriate, too, but I haven't thought about this too much...
¥ re: Twilight.Setup - Yeek!  I dunno if I like that file format.  The "rT2ExtSetup2 ($1002)	Reserved for internal CDev use.  (Module name of selected module.)" should actually be a rPString resource, most likely with ID of 1.  The "rT2ExtSetup1 ($1001)	Reserved for internal CDev use.  (Internal integer flags.)" is probably okay.  However, the "rTilerSetup ($0100)	User adjustable configuration resources for Tiler module." is what gets me.  I believe that some standard types should be declared like rCheckBox ($0001?), rRadio ($0002?), (rPString and rText have already been defined) and that the preferences be saved and loaded by name, rather than by number.  So, for example, if a module is named "Tiler" and it wants to load a pString, it would load the pString named "Tiler" from the Twilight.Setup file.  Also, if there are more than one pStrings, it should load "Tiler - 1" and then "Tiler - 2" or something like that.  What do you think about this, eh?  I think it'd be much more flexible than assigning a type for each blanker.
¥ I'd be nice if the Twilight II Active checkbox was on the main control panel window
¥ I did a new T2 icon for the Twilight.Preferences file... probably not too good, buy hey, what do I know?  :-)